// <auto-generated>
// This code was auto-generated by a tool, every time
// the tool executes this code will be reset.
//
// If you need to extend the classes generated to add
// fields or methods to them, please create partial
// declarations in another file.
// </auto-generated>
#pragma warning disable 0109
#pragma warning disable 1591


namespace Quantum {
  using Photon.Deterministic;
  using Quantum;
  using Quantum.Core;
  using Quantum.Collections;
  using Quantum.Inspector;
  using Quantum.Physics2D;
  using Quantum.Physics3D;
  using Byte = System.Byte;
  using SByte = System.SByte;
  using Int16 = System.Int16;
  using UInt16 = System.UInt16;
  using Int32 = System.Int32;
  using UInt32 = System.UInt32;
  using Int64 = System.Int64;
  using UInt64 = System.UInt64;
  using Boolean = System.Boolean;
  using String = System.String;
  using Object = System.Object;
  using FlagsAttribute = System.FlagsAttribute;
  using SerializableAttribute = System.SerializableAttribute;
  using MethodImplAttribute = System.Runtime.CompilerServices.MethodImplAttribute;
  using MethodImplOptions = System.Runtime.CompilerServices.MethodImplOptions;
  using FieldOffsetAttribute = System.Runtime.InteropServices.FieldOffsetAttribute;
  using StructLayoutAttribute = System.Runtime.InteropServices.StructLayoutAttribute;
  using LayoutKind = System.Runtime.InteropServices.LayoutKind;
  #if QUANTUM_UNITY //;
  using TooltipAttribute = UnityEngine.TooltipAttribute;
  using HeaderAttribute = UnityEngine.HeaderAttribute;
  using SpaceAttribute = UnityEngine.SpaceAttribute;
  using RangeAttribute = UnityEngine.RangeAttribute;
  using HideInInspectorAttribute = UnityEngine.HideInInspector;
  using PreserveAttribute = UnityEngine.Scripting.PreserveAttribute;
  using FormerlySerializedAsAttribute = UnityEngine.Serialization.FormerlySerializedAsAttribute;
  using MovedFromAttribute = UnityEngine.Scripting.APIUpdating.MovedFromAttribute;
  using CreateAssetMenu = UnityEngine.CreateAssetMenuAttribute;
  using RuntimeInitializeOnLoadMethodAttribute = UnityEngine.RuntimeInitializeOnLoadMethodAttribute;
  #endif //;
  
  public unsafe partial class Frame {
    public unsafe partial struct FrameEvents {
      static partial void GetEventTypeCountCodeGen(ref Int32 eventCount) {
        eventCount = 11;
      }
      static partial void GetParentEventIDCodeGen(Int32 eventID, ref Int32 parentEventID) {
        switch (eventID) {
          default: break;
        }
      }
      static partial void GetEventTypeCodeGen(Int32 eventID, ref System.Type result) {
        switch (eventID) {
          case EventUpdateWorkers.ID: result = typeof(EventUpdateWorkers); return;
          case EventOnUnitCreated.ID: result = typeof(EventOnUnitCreated); return;
          case EventUpdateResources.ID: result = typeof(EventUpdateResources); return;
          case EventUnitIdle.ID: result = typeof(EventUnitIdle); return;
          case EventUnitMoving.ID: result = typeof(EventUnitMoving); return;
          case EventUnitAttackRange.ID: result = typeof(EventUnitAttackRange); return;
          case EventUnitHarvesting.ID: result = typeof(EventUnitHarvesting); return;
          case EventOnLocalPlayerCreated.ID: result = typeof(EventOnLocalPlayerCreated); return;
          case EventOnHealthChanged.ID: result = typeof(EventOnHealthChanged); return;
          case EventOnEntityDie.ID: result = typeof(EventOnEntityDie); return;
          default: break;
        }
      }
      public EventUpdateWorkers UpdateWorkers(EntityRef playerEntity) {
        var ev = _f.Context.AcquireEvent<EventUpdateWorkers>(EventUpdateWorkers.ID);
        ev.playerEntity = playerEntity;
        _f.AddEvent(ev);
        return ev;
      }
      public EventOnUnitCreated OnUnitCreated(EntityRef playerEntity, EntityRef unitEntity) {
        var ev = _f.Context.AcquireEvent<EventOnUnitCreated>(EventOnUnitCreated.ID);
        ev.playerEntity = playerEntity;
        ev.unitEntity = unitEntity;
        _f.AddEvent(ev);
        return ev;
      }
      public EventUpdateResources UpdateResources(EntityRef playerEntity) {
        var ev = _f.Context.AcquireEvent<EventUpdateResources>(EventUpdateResources.ID);
        ev.playerEntity = playerEntity;
        _f.AddEvent(ev);
        return ev;
      }
      public EventUnitIdle UnitIdle(EntityRef unitEntity) {
        var ev = _f.Context.AcquireEvent<EventUnitIdle>(EventUnitIdle.ID);
        ev.unitEntity = unitEntity;
        _f.AddEvent(ev);
        return ev;
      }
      public EventUnitMoving UnitMoving(EntityRef unitEntity) {
        var ev = _f.Context.AcquireEvent<EventUnitMoving>(EventUnitMoving.ID);
        ev.unitEntity = unitEntity;
        _f.AddEvent(ev);
        return ev;
      }
      public EventUnitAttackRange UnitAttackRange(EntityRef unitEntity) {
        var ev = _f.Context.AcquireEvent<EventUnitAttackRange>(EventUnitAttackRange.ID);
        ev.unitEntity = unitEntity;
        _f.AddEvent(ev);
        return ev;
      }
      public EventUnitHarvesting UnitHarvesting(EntityRef unitEntity, ResourceType resourceType) {
        var ev = _f.Context.AcquireEvent<EventUnitHarvesting>(EventUnitHarvesting.ID);
        ev.unitEntity = unitEntity;
        ev.resourceType = resourceType;
        _f.AddEvent(ev);
        return ev;
      }
      public EventOnLocalPlayerCreated OnLocalPlayerCreated(EntityRef playerEntity) {
        var ev = _f.Context.AcquireEvent<EventOnLocalPlayerCreated>(EventOnLocalPlayerCreated.ID);
        ev.playerEntity = playerEntity;
        _f.AddEvent(ev);
        return ev;
      }
      public EventOnHealthChanged OnHealthChanged(EntityRef entity, FP amount) {
        var ev = _f.Context.AcquireEvent<EventOnHealthChanged>(EventOnHealthChanged.ID);
        ev.entity = entity;
        ev.amount = amount;
        _f.AddEvent(ev);
        return ev;
      }
      public EventOnEntityDie OnEntityDie(EntityRef entity) {
        var ev = _f.Context.AcquireEvent<EventOnEntityDie>(EventOnEntityDie.ID);
        ev.entity = entity;
        _f.AddEvent(ev);
        return ev;
      }
    }
  }
  public unsafe partial class EventUpdateWorkers : EventBase {
    public new const Int32 ID = 1;
    public EntityRef playerEntity;
    protected EventUpdateWorkers(Int32 id, EventFlags flags) : 
        base(id, flags) {
    }
    public EventUpdateWorkers() : 
        base(1, EventFlags.Server|EventFlags.Client) {
    }
    public new QuantumGame Game {
      get {
        return (QuantumGame)base.Game;
      }
      set {
        base.Game = value;
      }
    }
    public override Int32 GetHashCode() {
      unchecked {
        var hash = 41;
        hash = hash * 31 + playerEntity.GetHashCode();
        return hash;
      }
    }
  }
  public unsafe partial class EventOnUnitCreated : EventBase {
    public new const Int32 ID = 2;
    public EntityRef playerEntity;
    public EntityRef unitEntity;
    protected EventOnUnitCreated(Int32 id, EventFlags flags) : 
        base(id, flags) {
    }
    public EventOnUnitCreated() : 
        base(2, EventFlags.Server|EventFlags.Client) {
    }
    public new QuantumGame Game {
      get {
        return (QuantumGame)base.Game;
      }
      set {
        base.Game = value;
      }
    }
    public override Int32 GetHashCode() {
      unchecked {
        var hash = 43;
        hash = hash * 31 + playerEntity.GetHashCode();
        hash = hash * 31 + unitEntity.GetHashCode();
        return hash;
      }
    }
  }
  public unsafe partial class EventUpdateResources : EventBase {
    public new const Int32 ID = 3;
    public EntityRef playerEntity;
    protected EventUpdateResources(Int32 id, EventFlags flags) : 
        base(id, flags) {
    }
    public EventUpdateResources() : 
        base(3, EventFlags.Server|EventFlags.Client) {
    }
    public new QuantumGame Game {
      get {
        return (QuantumGame)base.Game;
      }
      set {
        base.Game = value;
      }
    }
    public override Int32 GetHashCode() {
      unchecked {
        var hash = 47;
        hash = hash * 31 + playerEntity.GetHashCode();
        return hash;
      }
    }
  }
  public unsafe partial class EventUnitIdle : EventBase {
    public new const Int32 ID = 4;
    public EntityRef unitEntity;
    protected EventUnitIdle(Int32 id, EventFlags flags) : 
        base(id, flags) {
    }
    public EventUnitIdle() : 
        base(4, EventFlags.Server|EventFlags.Client) {
    }
    public new QuantumGame Game {
      get {
        return (QuantumGame)base.Game;
      }
      set {
        base.Game = value;
      }
    }
    public override Int32 GetHashCode() {
      unchecked {
        var hash = 53;
        hash = hash * 31 + unitEntity.GetHashCode();
        return hash;
      }
    }
  }
  public unsafe partial class EventUnitMoving : EventBase {
    public new const Int32 ID = 5;
    public EntityRef unitEntity;
    protected EventUnitMoving(Int32 id, EventFlags flags) : 
        base(id, flags) {
    }
    public EventUnitMoving() : 
        base(5, EventFlags.Server|EventFlags.Client) {
    }
    public new QuantumGame Game {
      get {
        return (QuantumGame)base.Game;
      }
      set {
        base.Game = value;
      }
    }
    public override Int32 GetHashCode() {
      unchecked {
        var hash = 59;
        hash = hash * 31 + unitEntity.GetHashCode();
        return hash;
      }
    }
  }
  public unsafe partial class EventUnitAttackRange : EventBase {
    public new const Int32 ID = 6;
    public EntityRef unitEntity;
    protected EventUnitAttackRange(Int32 id, EventFlags flags) : 
        base(id, flags) {
    }
    public EventUnitAttackRange() : 
        base(6, EventFlags.Server|EventFlags.Client) {
    }
    public new QuantumGame Game {
      get {
        return (QuantumGame)base.Game;
      }
      set {
        base.Game = value;
      }
    }
    public override Int32 GetHashCode() {
      unchecked {
        var hash = 61;
        hash = hash * 31 + unitEntity.GetHashCode();
        return hash;
      }
    }
  }
  public unsafe partial class EventUnitHarvesting : EventBase {
    public new const Int32 ID = 7;
    public EntityRef unitEntity;
    public ResourceType resourceType;
    protected EventUnitHarvesting(Int32 id, EventFlags flags) : 
        base(id, flags) {
    }
    public EventUnitHarvesting() : 
        base(7, EventFlags.Server|EventFlags.Client) {
    }
    public new QuantumGame Game {
      get {
        return (QuantumGame)base.Game;
      }
      set {
        base.Game = value;
      }
    }
    public override Int32 GetHashCode() {
      unchecked {
        var hash = 67;
        hash = hash * 31 + unitEntity.GetHashCode();
        hash = hash * 31 + resourceType.GetHashCode();
        return hash;
      }
    }
  }
  public unsafe partial class EventOnLocalPlayerCreated : EventBase {
    public new const Int32 ID = 8;
    public EntityRef playerEntity;
    protected EventOnLocalPlayerCreated(Int32 id, EventFlags flags) : 
        base(id, flags) {
    }
    public EventOnLocalPlayerCreated() : 
        base(8, EventFlags.Server|EventFlags.Client) {
    }
    public new QuantumGame Game {
      get {
        return (QuantumGame)base.Game;
      }
      set {
        base.Game = value;
      }
    }
    public override Int32 GetHashCode() {
      unchecked {
        var hash = 71;
        hash = hash * 31 + playerEntity.GetHashCode();
        return hash;
      }
    }
  }
  public unsafe partial class EventOnHealthChanged : EventBase {
    public new const Int32 ID = 9;
    public EntityRef entity;
    public FP amount;
    protected EventOnHealthChanged(Int32 id, EventFlags flags) : 
        base(id, flags) {
    }
    public EventOnHealthChanged() : 
        base(9, EventFlags.Server|EventFlags.Client) {
    }
    public new QuantumGame Game {
      get {
        return (QuantumGame)base.Game;
      }
      set {
        base.Game = value;
      }
    }
    public override Int32 GetHashCode() {
      unchecked {
        var hash = 73;
        hash = hash * 31 + entity.GetHashCode();
        hash = hash * 31 + amount.GetHashCode();
        return hash;
      }
    }
  }
  public unsafe partial class EventOnEntityDie : EventBase {
    public new const Int32 ID = 10;
    public EntityRef entity;
    protected EventOnEntityDie(Int32 id, EventFlags flags) : 
        base(id, flags) {
    }
    public EventOnEntityDie() : 
        base(10, EventFlags.Server|EventFlags.Client) {
    }
    public new QuantumGame Game {
      get {
        return (QuantumGame)base.Game;
      }
      set {
        base.Game = value;
      }
    }
    public override Int32 GetHashCode() {
      unchecked {
        var hash = 79;
        hash = hash * 31 + entity.GetHashCode();
        return hash;
      }
    }
  }
}
#pragma warning restore 0109
#pragma warning restore 1591
